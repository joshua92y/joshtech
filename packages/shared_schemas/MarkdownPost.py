# generated by datamodel-codegen:
#   filename:  MarkdownPost.json
#   timestamp: 2025-06-10T06:07:42+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel, Field


class ContentType(Enum):
    work = 'work'
    project = 'project'
    post = 'post'
    page = 'page'


class MarkdownPost(BaseModel):
    id: Optional[int] = Field(None, title='ID')
    title: str = Field(..., title='title')
    slug: Optional[str] = Field(None, title='slug')
    summary: Optional[str] = Field(None, title='summary')
    content: str = Field(..., title='content')
    content_type: ContentType = Field(..., title='content type')
    image: Optional[str] = Field(None, title='image')
    images: Optional[Dict[str, Any]] = Field([], title='images')
    tag: Optional[str] = Field(None, title='tag')
    link: Optional[str] = Field(None, title='link')
    team: Optional[Dict[str, Any]] = Field([], title='team')
    author: int = Field(..., title='author')
    is_published: Optional[bool] = Field(False, title='is published')
    published_at: Optional[datetime] = Field(None, title='published at')
    created_at: Optional[datetime] = Field(None, title='created at')
    updated_at: Optional[datetime] = Field(None, title='updated at')

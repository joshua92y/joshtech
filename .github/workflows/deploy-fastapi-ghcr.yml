# .github/workflows/deploy-fastapi-ghcr.yml
# ✅ 워크플로우 이름
name: Build & Deploy FastAPI to GHCR and Fly.io

# ✅ 실행 조건: 다음 디렉토리에 변경이 생기면 실행
on:
  push:
    paths:
      - 'apps/backend_api/**'
      - 'packages/shared_schemas/**'
      - '.github/workflows/deploy-fastapi-ghcr.yml'
      - 'infra/oci/**'
  workflow_dispatch: # ✅ 수동 실행 버튼 추가

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # ✅ GitHub Actions 실행 환경

    steps:
      # ✅ 1. 현재 GitHub 리포지토리 코드를 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # ✅ 2. GitHub Container Registry (GHCR)에 로그인
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # ✅ 3. Docker 이미지 빌드 (FastAPI + shared_schemas 포함) 및 GHCR에 푸시
      - name: Build and push to GHCR
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/joshtech-fastapi:latest \
            -f apps/backend_api/Dockerfile .
                docker push ghcr.io/${{ github.repository_owner }}/joshtech-fastapi:latest
      # ✅ 🔍 디버깅: 실제로 파일이 존재하는지 확인
      - name: Debug file structure before SCP
        run: |
          echo "Current directory: $PWD"
          echo "--- Showing all files under ./infra/oci ---"
          find infra/oci
          echo "--- Showing docker-compose.yml exists? ---"
          test -f infra/oci/docker-compose.yml && echo "✅ Found docker-compose.yml" || echo "❌ Missing docker-compose.yml"
          test -f infra/oci/traefik/traefik.yml && echo "✅ Found traefik.yml" || echo "❌ Missing traefik.yml"

      # ✅ 4. docker-compose.yml + traefik 설정 파일들을 서버로 복사
      - name: Upload compose files to OCI
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.OCI_HOST_FASTAPI_VM }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
          source: |
            ./infra/oci/docker-compose.yml
            ./infra/oci/traefik/traefik.yml
          target: ~/deploy/joshtech/
          debug: true

      # ✅ 5. OCI 서버에 SSH 접속 후 docker compose 실행
      - name: Deploy to OCI via SSH (Compose v2)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OCI_HOST_FASTAPI_VM }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ~/deploy/joshtech
            mv infra/oci/docker-compose.yml . || true  # 이미 있으면 무시
            echo "${{ secrets.GHCR_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            [ -f traefik/acme.json ] && sudo chmod 600 traefik/acme.json
            sudo docker compose pull
            sudo docker compose up -d --remove-orphans

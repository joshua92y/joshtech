# ‚úÖ .github/workflows/deploy-dragonfly-worker.yml
name: Deploy Dragonfly + Worker

on:
  push:
    paths:
      - 'apps/worker/**'
      - 'packages/shared_queue/**'
      - 'infra/oci/dragonfly-worker-compose.yml'
      - '.github/workflows/deploy-dragonfly-worker.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: üê≥ Build & Push Multi-Arch Worker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/worker/Dockerfile.worker
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/worker:latest
          platforms: linux/amd64,linux/arm64

      - name: üì§ Upload docker-compose to cache VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.OCI_HOST_CACHE_VM }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
          port: 22
          source: infra/oci/dragonfly-worker-compose.yml
          target: ~/deploy/cache

      - name: üöÄ SSH into OCI and deploy worker with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OCI_HOST_CACHE_VM }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ~/deploy/cache

            echo "${{ secrets.GHCR_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin

            cat <<EOF > infra/oci/.env
            R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}
            R2_BUCKET=${{ secrets.R2_BUCKET }}
            R2_ACCESS_KEY=${{ secrets.R2_ACCESS_KEY }}
            R2_SECRET_KEY=${{ secrets.R2_SECRET_KEY }}
            DJANGO_API_URL=${{ secrets.DJANGO_API_URL }}
            EOF

            docker compose --file infra/oci/dragonfly-worker-compose.yml pull
            docker compose --file infra/oci/dragonfly-worker-compose.yml down
            docker compose --file infra/oci/dragonfly-worker-compose.yml up -d --remove-orphans
